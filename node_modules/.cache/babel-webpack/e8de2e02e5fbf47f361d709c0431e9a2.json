{"ast":null,"code":"import _asyncToGenerator from \"/Users/watcharapun/Documents/development-[DEV]/stream-ipcam/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\n\nENV.registerFlag( // This typed array passed in to WebAssembly.validate is WebAssembly binary\n// code. In this case it is a small program that contains SIMD\n// instructions.\n'WASM_HAS_SIMD_SUPPORT', /*#__PURE__*/_asyncToGenerator(function* () {\n  return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n}));\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\n\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', /*#__PURE__*/_asyncToGenerator(function* () {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)); // This typed array is a WebAssembly program containing threaded\n    // instructions.\n\n    return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n})); //# sourceMappingURL=flags_wasm.js.map","map":{"version":3,"sources":["/Users/watcharapun/Documents/development-[DEV]/stream-ipcam/node_modules/@tensorflow/tfjs-backend-wasm/dist/flags_wasm.js"],"names":["env","ENV","registerFlag","WebAssembly","validate","Uint8Array","get","MessageChannel","port1","postMessage","SharedArrayBuffer","e"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,uBAApB;AACA,MAAMC,GAAG,GAAGD,GAAG,EAAf;AACA;AACA;AACA;AACA;;AACAC,GAAG,CAACC,YAAJ,EACA;AACA;AACA;AACA,uBAJA,iCAIyB;AAAA,SAAYC,WAAW,CAACC,QAAZ,CAAqB,IAAIC,UAAJ,CAAe,CACrE,CADqE,EAClE,EADkE,EAC9D,GAD8D,EACzD,GADyD,EACpD,CADoD,EACjD,CADiD,EAC9C,CAD8C,EAC3C,CAD2C,EACxC,CADwC,EACrC,CADqC,EAClC,CADkC,EAC/B,EAD+B,EAC3B,CAD2B,EACxB,CADwB,EACrB,CADqB,EAErE,CAFqE,EAElE,CAFkE,EAE/D,CAF+D,EAE5D,EAF4D,EAExD,CAFwD,EAErD,CAFqD,EAElD,CAFkD,EAE/C,CAF+C,EAE5C,EAF4C,EAExC,CAFwC,EAErC,GAFqC,EAEhC,EAFgC,EAE5B,EAF4B,EAExB,EAFwB,CAAf,CAArB,CAAZ;AAAA,CAJzB;AAQA;AACA;AACA;AACA;;AACAJ,GAAG,CAACC,YAAJ,CAAiB,8BAAjB,iCAAiD,aAAY;AACzD;AACA;AACA,MAAID,GAAG,CAACK,GAAJ,CAAQ,SAAR,CAAJ,EAAwB;AACpB,WAAO,KAAP;AACH;;AACD,MAAI;AACA;AACA;AACA,QAAIC,cAAJ,GAAqBC,KAArB,CAA2BC,WAA3B,CAAuC,IAAIC,iBAAJ,CAAsB,CAAtB,CAAvC,EAHA,CAIA;AACA;;AACA,WAAOP,WAAW,CAACC,QAAZ,CAAqB,IAAIC,UAAJ,CAAe,CACvC,CADuC,EACpC,EADoC,EAChC,GADgC,EAC3B,GAD2B,EACtB,CADsB,EACnB,CADmB,EAChB,CADgB,EACb,CADa,EACV,CADU,EACP,CADO,EACJ,CADI,EACD,EADC,EACG,CADH,EACM,CADN,EACS,CADT,EACY,CADZ,EACe,CADf,EACkB,CADlB,EACqB,CADrB,EAEvC,CAFuC,EAEpC,CAFoC,EAEjC,CAFiC,EAE9B,CAF8B,EAE3B,CAF2B,EAExB,EAFwB,EAEpB,EAFoB,EAEhB,CAFgB,EAEb,CAFa,EAEV,CAFU,EAEP,EAFO,EAEH,CAFG,EAEA,GAFA,EAEK,EAFL,EAES,CAFT,EAEY,CAFZ,EAEe,EAFf,EAEmB,EAFnB,CAAf,CAArB,CAAP;AAIH,GAVD,CAWA,OAAOM,CAAP,EAAU;AACN,WAAO,KAAP;AACH;AACJ,CApBD,G,CAqBA","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n// This typed array passed in to WebAssembly.validate is WebAssembly binary\n// code. In this case it is a small program that contains SIMD\n// instructions.\n'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3,\n    2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n])));\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n    // TODO(annxingyuan): Enable node support once this is resolved:\n    // https://github.com/tensorflow/tfjs/issues/3830\n    if (ENV.get('IS_NODE')) {\n        return false;\n    }\n    try {\n        // Test for transferability of SABs (needed for Firefox)\n        // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n        new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n        // This typed array is a WebAssembly program containing threaded\n        // instructions.\n        return WebAssembly.validate(new Uint8Array([\n            0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5,\n            4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11\n        ]));\n    }\n    catch (e) {\n        return false;\n    }\n});\n//# sourceMappingURL=flags_wasm.js.map"]},"metadata":{},"sourceType":"module"}